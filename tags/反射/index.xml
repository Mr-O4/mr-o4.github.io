<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>反射 on Mr.Boii</title>
    <link>https://www.boii.xyz/tags/%E5%8F%8D%E5%B0%84/</link>
    <description>Recent content in 反射 on Mr.Boii</description>
    <image>
      <url>https://www.boii.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.boii.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Jun 2019 00:58:48 +0000</lastBuildDate><atom:link href="https://www.boii.xyz/tags/%E5%8F%8D%E5%B0%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java-反射</title>
      <link>https://www.boii.xyz/posts/java/java-%E5%8F%8D%E5%B0%84/</link>
      <pubDate>Sun, 09 Jun 2019 00:58:48 +0000</pubDate>
      
      <guid>https://www.boii.xyz/posts/java/java-%E5%8F%8D%E5%B0%84/</guid>
      <description>Java 神器：反射
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  Person p = new Person(); /**获取*/ Class&amp;lt;?&amp;gt; clazz = p.getClass(); // 得知道类对象 Class&amp;lt;?&amp;gt; clazz = Person.class;	//得知道类名 Class&amp;lt;?&amp;gt; clazz = Class.forName(&amp;#34;com.tcp404.Person&amp;#34;);//得知道类的全路径名  /** 获取方法 */ Method method = clazz.getDeclaredMethod(&amp;#34;方法名&amp;#34;, new Class(){[参数类型.class, 参数类型.class, ...]}); Methods[] methods = clazz.getDeclaredMethods(); /** 获取属性 */ Field field = clazz.getDeclaredField(&amp;#34;属性名字&amp;#34;); Field[] fields = clazz.getDeclaredFields(); /** 获取构造器 */ Constructor&amp;lt;?</description>
    </item>
    
  </channel>
</rss>
